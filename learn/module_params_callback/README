This is just a continuation to the last program, where we learnt about how to
parameters to a kernel module from user.

In the earlier program, we just saw on how to set the parameters but in this,
along with passing parameters, we can also notify the kernel module that we have
passed the values to consume. 'module_param_cb' is used for this purpose.

This is actually a variation of 'module_param' with callbacks.

We just need to define a set function and fill a structure 'my_param_ops' as
below and then just use it in 'module_param_cb'. That's it.

For example, here a function notify_param is defined and passed here in this
structure.

Check the complete program with all details.

const struct kernel_param_ops my_param_ops =
{
    .set = &notify_param,
    .get = &param_get_int,
};

module_param_cb(arg, &my_param_ops, &arg, S_IRUSR|S_IWUSR);

Program is quite simple, we can just go through the program and find how it
works.

[ ] make
[ ] insmod mymodule.ko
[ ] echo 4 > /sys/module/mymodule/
[ ] dmesg | tail
[ 2265.528666] Call back function called..
[ 2265.528670] New value of arg = 4
